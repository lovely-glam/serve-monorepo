run-name: ${{inputs.service}} deploy server

on:
  workflow_call: 
    inputs:
      server:
        required: true
        type: string
        default: arisa-server
      service:
        type: string
        required: true
      infisical-token:
        type: string
        required: true
jobs:
  deploy-api:
    runs-on: ${{inputs.server}}
    env:
      DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Clean Container, Image And Prepare For Deploy
        run: infisical run --env=prod --token=${{inputs.infisical-token}} --domain=${{secrets.INFISICAL_URL}} --projectId=${{secrets.INFISICAL_PROJECT_ID}} --path=/glam-serve/${{inputs.service}} --watch -- docker compose -f docker-compose.prod.yaml -p glam-serve-service down ${{inputs.service}} --rmi all -v
        continue-on-error: true

      - name: Docker Pull Image For Deploy
        run: infisical run --env=prod --token=${{inputs.infisical-token}} --domain=${{secrets.INFISICAL_URL}} --projectId=${{secrets.INFISICAL_PROJECT_ID}} --path=/glam-serve/${{inputs.service}} --watch -- docker compose -f docker-compose.prod.yaml pull ${{inputs.service}}

      - name: Infisical Login && Deploy Api
        run: infisical run --env=prod --token=${{inputs.infisical-token}} --domain=${{secrets.INFISICAL_URL}} --projectId=${{secrets.INFISICAL_PROJECT_ID}} --path=/glam-serve/${{inputs.service}} --watch -- docker compose -f docker-compose.prod.yaml -p glam-serve-service up ${{inputs.service}} -d
